/*  
 *   This file is part of the computer assignment for the
 *   Information Retrieval course at KTH.
 * 
 *   First version:  Jussi Karlgren, 2014
 */  

package ir;

import java.io.PrintWriter;
import java.util.LinkedList;

/**
 *   A list of postings for a given word.
 */
public class OutputToFile {


	// 351   0  TT9495-x-y 0
	public static void printQrels(PrintWriter out, String queryId, String groupId, LinkedList<PostingsEntry> list,  boolean[] docIsRelevant) throws Exception {
		if (list.size() != docIsRelevant.length) {throw new Exception("Mismatch");}
		int i = 0;
		for (PostingsEntry p: list) {
			out.println(queryId+" "+groupId+" "+p.docID+" "+(docIsRelevant[i]?"1":"0"));
			i++;
		}
	}
	// 351   0  TT9495-x-y 0
	public static void printQrels(PrintWriter out, String queryId, String groupId, LinkedList<PostingsEntry> list,  int[] docIsRelevant) throws Exception {
		if (list.size() != docIsRelevant.length) {throw new Exception("Mismatch");}
		int i = 0;
		for (PostingsEntry p: list) {
			out.println(queryId+" "+groupId+" "+p.docID+" "+docIsRelevant[i]);
			i++;
		}
	}
	// 351   0  FR940104-0-00001  1   42.38   run-name
	public static void printRankings(PrintWriter out, String queryId, String runId, LinkedList<PostingsEntry> list) throws Exception {
		int i = 1;
		for (PostingsEntry p: list) {
			out.println(queryId+" 0 "+p.docID+" "+i+" "+p.score+" "+runId);
			i++;
		}
	
	}
}



